use mavenmovies;

-- Question 1: 
-- Retrieve the total number of rentals made in the Mavenmovies database
select count(rental_id) from rental;

-- Question 2: 
-- Find the average rental duration (in days) of movies rented from the Mavenmovies database.
select round(avg(rental_duration)) as Days from film;
select*from rental;

-- Question 3: 
-- Display the first name and last name of customers in uppercase.  
select upper(first_name) , upper(last_name) from actor;

-- Question 4: 
-- Extract the month from the rental date and display it alongside the rental ID. 
select rental_id , monthname(rental_date) as Month from rental;

-- Question 5: 
-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
select customer_id , count(rental_id) from rental group by customer_id;

-- Question 6: 
-- Find the total revenue generated by each store. 
select 
store_id ,sum(amount) 
from payment 
inner join 
staff on staff.staff_id = payment.staff_id
group by store_id;

-- Questio 7:
-- Display the title of the movie, customers first name, and last name who rented it. 
select
title,first_name,last_name
from film inner join inventory on
inventory.film_id=film.film_id
inner join rental on
rental.inventory_id = inventory.inventory_id
inner join customer on
customer.customer_id=rental.customer_id;

-- Question 8: 
-- Retrieve the names of all actors who have appeared in the film "Gone with the Wind."  
select film.title, actor.first_name, actor.last_name from actor
inner join film_actor on film_actor.actor_id=actor.actor_id
inner join film on film.film_id=film_actor.film_id
where title = "Gone with the Wind";
select * from city;

-- Question 9: 
-- Determine the total number of rentals for each category of movies. 
select title as Movie,count(rental_id) as Num_Of_rentals from film 
inner join inventory on inventory.film_id=film.film_id
inner join rental on rental.inventory_id=inventory.inventory_id
group by Movie;

-- Question 10: 
-- Find the average rental rate of movies in each language. 
select language.name, avg(rental_rate)
from film inner join language on
language.language_id=film.language_id
group by name;

--  Question 11: 
-- Retrieve the customer names along with the total amount they've spent on rentals. 
select concat(first_name, " " , last_name) as Customer , sum(amount) as Total_Amount
from customer inner join payment on
payment.customer_id=customer.customer_id
group by customer;

-- Question 12:
-- List the titles of movies rented by each customer in a particular city (e.g., 'London'). 

select film.title , customer.first_name,customer.last_name, city from film
inner join inventory on inventory.film_id=film.film_id
inner join rental on rental.inventory_id=inventory.inventory_id
inner join payment on payment.rental_id=rental.rental_id	
inner join customer on customer.customer_id=payment.customer_id
inner join address on address.address_id=customer.address_id
inner join city on city.city_id=address.city_id
where city.city = "london";
select*from city;

-- Question 13:
--  Display the top 5 rented movies along with the number of times they've been rented.
select film.title as movies, count(rental_id) from film 
inner join inventory on inventory.film_id=film.film_id
inner join rental on rental.inventory_id=inventory.inventory_id
group by movies
limit 5; 

-- Question 14:
-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
select first_name , inventory.store_id from customer
inner join inventory on inventory.store_id=customer.store_id
inner join rental on rental.inventory_id=inventory.inventory_id 
where customer.store_id =1 and customer.store_id =2;

select first_name from customer where store_id=1 and store_id=2 and store_id in (select store_id from store);

